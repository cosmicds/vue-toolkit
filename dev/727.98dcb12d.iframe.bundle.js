"use strict";(self.webpackChunk_cosmicds_vue_toolkit=self.webpackChunk_cosmicds_vue_toolkit||[]).push([[727],{"./node_modules/@capacitor/geolocation/dist/esm/web.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Geolocation:()=>Geolocation,GeolocationWeb:()=>GeolocationWeb});var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@capacitor/core/dist/index.js");class GeolocationWeb extends _capacitor_core__WEBPACK_IMPORTED_MODULE_0__.E_{async getCurrentPosition(options){return new Promise(((resolve,reject)=>{navigator.geolocation.getCurrentPosition((pos=>{resolve(pos)}),(err=>{reject(err)}),Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},options))}))}async watchPosition(options,callback){return`${navigator.geolocation.watchPosition((pos=>{callback(pos)}),(err=>{callback(null,err)}),Object.assign({enableHighAccuracy:!1,timeout:1e4,maximumAge:0},options))}`}async clearWatch(options){window.navigator.geolocation.clearWatch(parseInt(options.id,10))}async checkPermissions(){if("undefined"==typeof navigator||!navigator.permissions)throw this.unavailable("Permissions API not available in this browser");const permission=await window.navigator.permissions.query({name:"geolocation"});return{location:permission.state,coarseLocation:permission.state}}async requestPermissions(){throw this.unimplemented("Not implemented on web.")}}const Geolocation=new GeolocationWeb}}]);